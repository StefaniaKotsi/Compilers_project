/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.analysis;

import minipython.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTTab(TTab node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDmult(TDmult node);
    void caseTDiv(TDiv node);
    void caseTFloordiv(TFloordiv node);
    void caseTMod(TMod node);
    void caseTEq(TEq node);
    void caseTEquals(TEquals node);
    void caseTPlusassign(TPlusassign node);
    void caseTMinusassign(TMinusassign node);
    void caseTMultassign(TMultassign node);
    void caseTDivassign(TDivassign node);
    void caseTExclam(TExclam node);
    void caseTDictt(TDictt node);
    void caseTDef(TDef node);
    void caseTLogicPlus(TLogicPlus node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBr(TLBr node);
    void caseTRBr(TRBr node);
    void caseTComma(TComma node);
    void caseTQmark(TQmark node);
    void caseTGqmark(TGqmark node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTNot(TNot node);
    void caseTIf(TIf node);
    void caseTElif(TElif node);
    void caseTElse(TElse node);
    void caseTFor(TFor node);
    void caseTWhile(TWhile node);
    void caseTPrint(TPrint node);
    void caseTReturn(TReturn node);
    void caseTContinue(TContinue node);
    void caseTBreak(TBreak node);
    void caseTIn(TIn node);
    void caseTLess(TLess node);
    void caseTGreat(TGreat node);
    void caseTLessoreq(TLessoreq node);
    void caseTGreatoreq(TGreatoreq node);
    void caseTTrue(TTrue node);
    void caseTSemi(TSemi node);
    void caseTFalse(TFalse node);
    void caseTNone(TNone node);
    void caseTSquote(TSquote node);
    void caseTDquote(TDquote node);
    void caseTBlank(TBlank node);
    void caseTLineComment(TLineComment node);
    void caseTNumber(TNumber node);
    void caseTId(TId node);
    void caseTString(TString node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
